type Cliente
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read, update, delete] },
    { allow: groups, groups: ["medicos"], operations: [create, read, update] },
    { allow: groups, groups: ["asistentes"], operations: [read, create, update] }
  ]) {
  id: ID!
  cedula: String! @index(name: "byCedula", queryField: "clienteByCedula")
  nombre: String!
  direccionResidenciaHabitual: String
  calleYNumero: String
  barrio: String
  parroquia: String
  canton: String
  provincia: String
  zona: String
  telefono: String
  fechaNacimiento: AWSDateTime
  lugarNacimiento: String
  nacionalidad: String
  grupoCultural: String
  edadEnAnosCumplidos: Int
  sexo: String
  estadoCivil: String
  nivelEducativo: String
  fechaAdmision: AWSDateTime
  ocupacion: String
  empresaDondeTrabaja: String
  tipoSeguroSalud: String
  referidoDe: String
  enCasoDeAvisarA: String
  parentescoAfinidad: String
  direccion: String
  consultas: [Consulta] @hasMany(indexName: "byCliente", fields: ["id"])
}

type Consulta
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read, update, delete] },
    { allow: groups, groups: ["medicos", "asistentes"], operations: [create, read, update] }
  ]) {
  id: ID!
  clienteID: ID! @index(name: "byCliente", queryField: "consultasByCliente", sortKeyFields: ["createdAt"])
  createdAt: AWSDateTime
  hora: String
  grupoSanguineoYFactorRh: String
  motivoDeConsulta: String
  alientoEtilico: String
  valorAlcoCheck: String
  antecedenteAlergico: String
  antecedenteClinico: String
  antecedenteGinecologico: String
  antecedenteTraumatologico: String
  antecedenteQuirurgico: String
  antecedenteFarmacoLogico: String
  antecedentePsiquiatrico: String
  antecedenteOtro: String
  enfermedadActual: String
  presionArterial: String
  frecuenciaCardiaca: String
  frecuenciaRespiratoria: String
  temperaturaBucal: String
  temperaturaAxilar: String
  peso: String
  talla: String
  gaslowOcular: String
  gaslowVerbal: String
  gaslowMotora: String
  gaslowTotal: String
  reaccionPupilaIzq: String
  reaccionPupilaDer: String
  tiempoLlenadoCapilar: String
  saturacionOxigeno: String
  viaAereaObstruida: String
  cabeza: String
  cuello: String
  torax: String
  abdomen: String
  columna: String
  pelvis: String
  extremidades: String
  heridaPenetrante: String
  heridaCortante: String
  fracturaExpuesta: String
  fracturaCerrada: String
  cuerpoExtrano: String
  hemorragia: String
  mordedura: String
  picadura: String
  excoriacion: String
  deformidadOMasa: String
  hematoma: String
  eritemaInflamacion: String
  luxacionEsguince: String
  quemadura: String
  solicitudExamenBiometria: Boolean
  solicitudExamenUroanalisis: Boolean
  solicitudExamenQuimicaSanguinea: Boolean
  solicitudExamenElectrolitos: Boolean
  solicitudExamenGasometria: Boolean
  solicitudExamenElectrocardiograma: Boolean
  solicitudExamenEndoscopia: Boolean
  solicitudExamenRxTorax: Boolean
  solicitudExamenRxAbdomen: Boolean
  solicitudExamenRxOsea: Boolean
  solicitudExamenTomografia: Boolean
  solicitudExamenResonancia: Boolean
  solicitudExamenEcografiaPelvica: Boolean
  solicitudExamenEcografiaAbdomen: Boolean
  solicitudExamenInterconsulta: Boolean
  solicitudExamenOtros: Boolean
  diagnosticodeIngreso: String
  diagnosticodeAltade: String
  planDeTratamientoIndicaciones: String
  planDeTratamientoMedicamentos: String

  recetas: [Receta] @hasMany(indexName: "byConsulta", fields: ["id"])
  documentos: [Documento] @hasMany(indexName: "byConsulta", fields: ["id"])
}

type Receta
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read, update, delete] },
    { allow: groups, groups: ["medicos", "asistentes"], operations: [create, read, update] }
  ]) {
  id: ID!
  # Legacy:
  clienteID: ID @index(name: "byCliente", queryField: "recetasByClienteIDAndCreatedAt", sortKeyFields: ["createdAt"])
  # Nuevo:
  consultaID: ID @index(name: "byConsulta", queryField: "recetasByConsulta", sortKeyFields: ["createdAt"])
  indicaciones: String
  s3key: String
  createdAt: AWSDateTime
}

enum DocumentoTipo { RX ECO LAB PDF IMG OTRO }

type Documento
  @model
  @auth(rules: [
    { allow: owner, operations: [create, read, update, delete] },
    { allow: groups, groups: ["medicos", "asistentes"], operations: [create, read, update] }
  ]) {
  id: ID!
  consultaID: ID! @index(name: "byConsulta", queryField: "documentosByConsulta", sortKeyFields: ["createdAt"])
  tipo: DocumentoTipo
  titulo: String
  s3key: String     # archivo en S3 (lo integramos luego)
  notas: String
  createdAt: AWSDateTime
}
